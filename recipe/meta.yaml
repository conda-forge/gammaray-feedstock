
{% set name = "gammaray" %}
{% set version = "2.11.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/KDAB/GammaRay/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz
    sha256: 03d7ca7bd5eb600c9c389d0cf071960330592f1f392a783b7fec5f9eaa5df586

build:
  skip: True  # [win]
  number: 1
  rpaths:
    - lib  # [osx]
    - GammaRay.app/Contents/Frameworks  # [osx]
  missing_dso_whitelist:  # [osx]
    - /usr/lib/libbsm.0.dylib  # [osx]
    - /usr/lib/libcups.2.dylib  # [osx]
    - /usr/lib/libresolv.9.dylib  # [osx]
    - /usr/lib/libsandbox.1.dylib  # [osx]
    - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ cdt('mesa-libgl-devel') }}      # [linux]
    - {{ cdt('mesa-libegl-devel') }}     # [linux]
    - {{ cdt('mesa-dri-drivers') }}      # [linux]
    - {{ cdt('libselinux-devel') }}      # [linux]
    - {{ cdt('libxext-devel') }}         # [linux]
    - {{ cdt('libxdamage') }}            # [linux]
    - {{ cdt('libxdamage-devel') }}      # [linux]
    - {{ cdt('libxfixes') }}             # [linux]
    - {{ cdt('libxfixes-devel') }}       # [linux]
    - {{ cdt('libxxf86vm') }}            # [linux]
    - {{ cdt('libxxf86vm-devel') }}      # [linux]
  host:
    - cmake
    - make  # [linux]
    - qt-main
  run:
    - qt-main
  run_constrained:                                            # [osx]
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.12") }}  # [osx]

test:
  commands:
    - test -f $PREFIX/lib/libgammaray_client.so  # [linux]

about:
  home: https://github.com/KDAB/GammaRay
  license: GPL-3.0-or-later AND MIT
  license_family: GPL
  license_file: LICENSE.GPL.txt
  summary: 'GammaRay is a tool to poke around in a Qt-application and also to manipulate the application to some extent.'
  description: |
    GammaRay is a software introspection tool for Qt applications developed by KDAB.
    Leveraging the QObject introspection mechanism it allows you to observe and
    manipulate your application at runtime. This works both locally on your
    workstation and remotely on an embedded target.
  dev_url: https://github.com/KDAB/GammaRay

extra:
  recipe-maintainers:
    - andfoy
    - ccordoba12
    - steff456
